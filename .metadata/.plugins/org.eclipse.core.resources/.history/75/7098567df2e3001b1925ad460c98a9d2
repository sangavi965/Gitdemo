package com.lti.dao;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.TreeMap;

public class CollectionDemo {

	public static void main(String[] args) {
		// list type of creation from line 12 to line 29
//		List<Student> students=new ArrayList<Student>();
//		students.add(new Student(1,"John",LocalDate.of(2000, 05, 12)));
//		students.add(new Student(2,"Mike",LocalDate.of(2001, 06, 13)));
//		students.add(new Student(3,"Kevin",LocalDate.of(2003, 07, 14)));
//		students.add(new Student(1,"Mark",LocalDate.of(2004, 05, 15)));
//
//		Student st=new Student (3,"Kevin",LocalDate.of(2003, 07, 14));
//		System.out.println(students.indexOf(st));
//		
//		
//		List<Integer> nums= new ArrayList<Integer>();
//		nums.add(10);
//		nums.add(20);
//		nums.add(30);
//		nums.add(40);
//		
//		System.out.println(nums.indexOf(30));
//-----------------------------------------------------
//		// set type of creation
//		Set<String> names = new HashSet<String>();
//		names.add(new String("Simant"));
//		names.add(new String("Priya"));
//		names.add(new String("Sidesh"));
//		names.add(new String("vineet"));
//		System.out.println(names); //prints everything in names ---
//		//---------------but not in the same order we inserted
//
//		System.out.println(names.contains("Sidesh")); // return true
//---------------------------------------------------
//		Set<String> names = new TreeSet<String>();
//		names.add(new String("Simant"));
//		names.add(new String("Priya"));
//		names.add(new String("Sidesh"));
//		names.add(new String("vineet"));
//		System.out.println(names);
		// prints in sorted order.
//------------------------------------------------------
//		Set<String> names = new TreeSet<String>();
//		names.add(new String("Simant"));
//		names.add(new String("Priya"));
//		names.add(new String("Sidesh"));
//		names.add(new String("vineet"));
//		names.add(null);
//		System.out.println(names);
		// tree set will no return null. it thorws err
//--------------------------------------------------------
		Set<String> names = new HashSet<String>();
		names.add(new String("Simant"));
		names.add(new String("Priya"));
		names.add(new String("Sidesh"));
		names.add(new String("vineet"));
		names.add(null);
		System.out.println(names);
		// hashset will also have null, --
		// -----but not in sorted order or in inserted order
//-------------------------------------------------------
//		Set<String> names = new HashSet<String>();
//		names.add(new String("Simant"));
//		names.add(new String("Priya"));
//		names.add(new String("Sidesh"));
//		names.add(new String("vineet"));
//		
//		System.out.println(names); 
//		System.out.println(names.remove("Simant"));
//		names.add("Kavin");
//		System.out.println(names); 
//---------------------------------------------------------
//		Map<Integer, String>credentials=new HashMap<Integer, String>();
//		credentials.put(1001, "pass@123"); //we have put, not add
//		credentials.put(1002, "pass@111");
//		credentials.put(1003, "pass@222");
//		credentials.put(1004, "pass@333");
//		credentials.put(1005, "pass@444");
//		credentials.put(1006, "pass@555");
//		credentials.put(1006, "pass@666");
//		// if a single key has multiple values, it will take the last value assigned
//		credentials.put(null, "pass@123");
//		credentials.put(null, "pass@900");
//		
//		System.out.println(credentials);
//---------------------------------------------------------
		Map<Integer, String> credentials = new TreeMap<Integer, String>();
		credentials.put(1001, "pass@123"); // we have put, not add
		credentials.put(1002, "pass@111");
		credentials.put(1003, "pass@222");
		credentials.put(1004, "pass@333");
		credentials.put(1005, "pass@444");
		credentials.put(1006, "pass@555");
		credentials.put(1006, "pass@666");
//		credentials.put(null, "pass@123");
//		credentials.put(null, "pass@900");

		System.out.println(credentials);
		// there r 2 ways to convert map into set--
		// --1. entrySet() 2.keySet()
		Set<Entry<Integer, String>> entrySet = credentials.entrySet();
		Iterator<Entry<Integer, String>> iterator = entrySet.iterator();
		while (iterator.hasNext()) {
			Entry<Integer, String> items = iterator.next();
			System.out.println(items.getKey() + " " + items.getValue());

		}
		Iterator<String> allNames = names.iterator();
		while (allNames.hasNext()) {
			String name = allNames.next();
			System.out.println(name);
		}
	}

}
